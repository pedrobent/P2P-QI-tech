# Generated by Django 5.2.6 on 2025-09-26 11:41

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('cpf', models.CharField(max_length=14, unique=True)),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('renda_mensal', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('foto_documento', models.ImageField(blank=True, null=True, upload_to='documentos/')),
                ('selfie', models.ImageField(blank=True, null=True, upload_to='selfies/')),
                ('kyc_status', models.CharField(choices=[('PENDENTE', 'Pendente'), ('APROVADO', 'Aprovado'), ('REPROVADO', 'Reprovado')], default='PENDENTE', max_length=10)),
                ('risco', models.CharField(choices=[('BAIXO', 'Baixo'), ('MEDIO', 'Médio'), ('ALTO', 'Alto'), ('NAO_CALCULADO', 'Não Calculado')], default='NAO_CALCULADO', max_length=15)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Emprestimo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor_solicitado', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('taxa_juros', models.DecimalField(decimal_places=2, max_digits=5)),
                ('meses_parcelamento', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('valor_total_pagamento', models.DecimalField(decimal_places=2, max_digits=10)),
                ('valor_parcela', models.DecimalField(decimal_places=2, max_digits=10)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('AGUARDANDO', 'Aguardando Investidor'), ('FINANCIADO', 'Financiado'), ('FINALIZADO', 'Finalizado')], default='AGUARDANDO', max_length=15)),
                ('investidor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='emprestimos_investidos', to=settings.AUTH_USER_MODEL)),
                ('tomador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emprestimos_pedidos', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
